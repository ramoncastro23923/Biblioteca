@model IEnumerable<Biblioteca.Models.Locacao>

@{
    ViewData["Title"] = "Locações";
    var isAdmin = User.IsInRole("Administrador");
}

<h1>Locações</h1>

@if (isAdmin)
{
    <p>
        <a asp-action="Create" class="btn btn-primary">Nova Locação</a>
    </p>
}

@if (TempData["SuccessMessage"] != null)
{
    <div class="alert alert-success">@TempData["SuccessMessage"]</div>
}

@if (TempData["ErrorMessage"] != null)
{
    <div class="alert alert-danger">@TempData["ErrorMessage"]</div>
}

<table class="table table-striped table-hover">
    <thead class="thead-dark">
        <tr>
            <th>Livro</th>
            @if (isAdmin)
            {
                <th>Usuário</th>
            }
            <th>Data Retirada</th>
            <th>Devolução Prevista</th>
            <th>Status</th>
            <th>Ações</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>@Html.DisplayFor(modelItem => item.Livro.Titulo)</td>
                @if (isAdmin)
                {
                    <td>@Html.DisplayFor(modelItem => item.Usuario.Nome)</td>
                }
                <td>@item.DataRetirada.ToString("dd/MM/yyyy")</td>
                <td>@item.DataDevolucaoPrevista.ToString("dd/MM/yyyy")</td>
                <td>
                    <span class="badge @GetStatusBadgeClass(item.Status)">
                        @Html.DisplayFor(modelItem => item.Status)
                    </span>
                </td>
                <td>
                    @if (isAdmin)
                    {
                        <a asp-action="Devolver" asp-route-id="@item.Id" class="btn btn-sm btn-success">Devolver</a>
                    }
                    @if (item.PodeRenovar)
                    {
                        <a asp-action="Renovar" asp-route-id="@item.Id" class="btn btn-sm btn-primary">Renovar</a>
                    }
                </td>
            </tr>
        }
    </tbody>
</table>

@functions {
    public string GetStatusBadgeClass(StatusLocacao status)
    {
        return status switch
        {
            StatusLocacao.Pendente => "bg-warning",
            StatusLocacao.Devolvido => "bg-success",
            StatusLocacao.Atrasado => "bg-danger",
            _ => "bg-secondary"
        };
    }
}