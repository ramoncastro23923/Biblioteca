@model Biblioteca.Models.DashboardViewModel
@{
    ViewData["Title"] = "Painel de Controle";
}

<div class="container-fluid">
    <!-- Cabeçalho Aprimorado -->
    <div class="d-sm-flex align-items-center justify-content-between mb-4">
        <h1 class="h3 mb-0 text-gray-800">Painel de Controle</h1>
        <div class="d-none d-sm-inline-block">
            <span class="badge bg-primary text-white p-2">
                <i class="fas fa-calendar-alt mr-2"></i>
                @DateTime.Now.ToString("dddd, dd MMMM yyyy", new System.Globalization.CultureInfo("pt-BR"))
            </span>
        </div>
    </div>

    <!-- Cards de Métricas -->
    <div class="row mb-4">
        <div class="col-xl-3 col-md-6 mb-4">
            <div class="card border-left-primary shadow h-100 py-2">
                <div class="card-body">
                    <div class="row no-gutters align-items-center">
                        <div class="col mr-2">
                            <div class="text-xs font-weight-bold text-primary text-uppercase mb-1">
                                Livros Cadastrados</div>
                            <div class="h5 mb-0 font-weight-bold text-gray-800">@Model.TotalLivros</div>
                        </div>
                        <div class="col-auto">
                            <i class="fas fa-book fa-2x text-gray-300"></i>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <div class="col-xl-3 col-md-6 mb-4">
            <div class="card border-left-success shadow h-100 py-2">
                <div class="card-body">
                    <div class="row no-gutters align-items-center">
                        <div class="col mr-2">
                            <div class="text-xs font-weight-bold text-success text-uppercase mb-1">
                                Locações Ativas</div>
                            <div class="h5 mb-0 font-weight-bold text-gray-800">@Model.LocacoesAtivas</div>
                        </div>
                        <div class="col-auto">
                            <i class="fas fa-exchange-alt fa-2x text-gray-300"></i>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <div class="col-xl-3 col-md-6 mb-4">
            <div class="card border-left-info shadow h-100 py-2">
                <div class="card-body">
                    <div class="row no-gutters align-items-center">
                        <div class="col mr-2">
                            <div class="text-xs font-weight-bold text-info text-uppercase mb-1">
                                Locações Atrasadas</div>
                            <div class="h5 mb-0 font-weight-bold text-gray-800">@Model.LocacoesAtrasadas</div>
                        </div>
                        <div class="col-auto">
                            <i class="fas fa-exclamation-triangle fa-2x text-gray-300"></i>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <div class="col-xl-3 col-md-6 mb-4">
            <div class="card border-left-warning shadow h-100 py-2">
                <div class="card-body">
                    <div class="row no-gutters align-items-center">
                        <div class="col mr-2">
                            <div class="text-xs font-weight-bold text-warning text-uppercase mb-1">
                                Multas Pendentes</div>
                            <div class="h5 mb-0 font-weight-bold text-gray-800">@Model.MultasPendentes.ToString("C")</div>
                        </div>
                        <div class="col-auto">
                            <i class="fas fa-money-bill-wave fa-2x text-gray-300"></i>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Gráficos -->
    <div class="row">
        <!-- Gráfico de Status das Locações -->
        <div class="col-xl-6 col-lg-5">
            <div class="card shadow mb-4">
                <div class="card-header py-3 d-flex flex-row align-items-center justify-content-between">
                    <h6 class="m-0 font-weight-bold text-primary">Status das Locações</h6>
                    <div class="dropdown no-arrow">
                        <a class="dropdown-toggle" href="#" role="button" id="dropdownMenuLink" 
                           data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                            <i class="fas fa-ellipsis-v fa-sm fa-fw text-gray-400"></i>
                        </a>
                        <div class="dropdown-menu dropdown-menu-right shadow animated--fade-in" 
                             aria-labelledby="dropdownMenuLink">
                            <div class="dropdown-header">Opções:</div>
                            <a class="dropdown-item" href="#" id="exportPieChart">Exportar como PNG</a>
                            <a class="dropdown-item" href="#" id="refreshPieChart">Atualizar Dados</a>
                        </div>
                    </div>
                </div>
                <div class="card-body">
                    <div class="chart-pie pt-4 pb-2 position-relative">
                        <canvas id="statusLocacoesChart"></canvas>
                        <div class="mt-4 text-center small position-absolute bottom-0 start-0 end-0">
                            @foreach (var item in Model.StatusLocacoes)
                            {
                                <span class="mr-2">
                                    <i class="fas fa-circle" style="color: @item.Cor"></i> @item.Status (@item.Quantidade)
                                </span>
                            }
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <!-- Gráfico de Locações por Mês -->
        <div class="col-xl-6 col-lg-7">
            <div class="card shadow mb-4">
                <div class="card-header py-3 d-flex flex-row align-items-center justify-content-between">
                    <h6 class="m-0 font-weight-bold text-primary">Locações nos Últimos 6 Meses</h6>
                    <div class="dropdown no-arrow">
                        <a class="dropdown-toggle" href="#" role="button" id="dropdownMenuLink" 
                           data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                            <i class="fas fa-ellipsis-v fa-sm fa-fw text-gray-400"></i>
                        </a>
                        <div class="dropdown-menu dropdown-menu-right shadow animated--fade-in" 
                             aria-labelledby="dropdownMenuLink">
                            <div class="dropdown-header">Opções:</div>
                            <a class="dropdown-item" href="#" id="exportLineChart">Exportar como PNG</a>
                            <a class="dropdown-item" href="#" id="refreshLineChart">Atualizar Dados</a>
                            <div class="dropdown-divider"></div>
                            <a class="dropdown-item" href="#" id="changeTimeRange">Alterar Período</a>
                        </div>
                    </div>
                </div>
                <div class="card-body">
                    <div class="chart-area">
                        <canvas id="locacoesPorMesChart"></canvas>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Tabela de Livros Mais Locados -->
    <div class="card shadow mb-4">
        <div class="card-header py-3 d-flex flex-row align-items-center justify-content-between">
            <h6 class="m-0 font-weight-bold text-primary">Top 20 Livros Mais Locados</h6>
            <div class="btn-group">
                <button class="btn btn-sm btn-outline-primary dropdown-toggle" type="button" 
                        data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                    <i class="fas fa-download mr-2"></i>Exportar
                </button>
                <div class="dropdown-menu dropdown-menu-right">
                    <a class="dropdown-item" href="#" id="exportTablePDF"><i class="fas fa-file-pdf mr-2"></i>PDF</a>
                    <a class="dropdown-item" href="#" id="exportTableExcel"><i class="fas fa-file-excel mr-2"></i>Excel</a>
                </div>
            </div>
        </div>
        <div class="card-body">
            <div class="table-responsive">
                <table class="table table-bordered table-hover" id="dataTable" width="100%" cellspacing="0">
                    <thead class="thead-light">
                        <tr>
                            <th>Título</th>
                            <th>Autor</th>
                            <th>Total de Locações</th>
                            <th>Percentual</th>
                            <th>Ações</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var livro in Model.TopLivros)
                        {
                            <tr>
                                <td>@livro.Titulo</td>
                                <td>@livro.Autor</td>
                                <td>@livro.TotalLocacoes</td>
                                <td>
                                    <div class="progress">
                                        <div class="progress-bar bg-primary" role="progressbar" 
                                             style="width: @(livro.Percentual)%;" 
                                             aria-valuenow="@livro.Percentual" 
                                             aria-valuemin="0" 
                                             aria-valuemax="100">
                                            @livro.Percentual.ToString("N2")%
                                        </div>
                                    </div>
                                </td>
                                <td>
                                    <a href="#" class="btn btn-sm btn-info" title="Detalhes">
                                        <i class="fas fa-info-circle"></i>
                                    </a>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
    </div>
</div>

@section Styles {
    <style>
        .card {
            border-radius: 0.35rem;
            transition: all 0.3s ease;
        }
        .card:hover {
            transform: translateY(-5px);
            box-shadow: 0 0.5rem 1.5rem rgba(0, 0, 0, 0.15);
        }
        .progress {
            height: 1.5rem;
            border-radius: 0.35rem;
        }
        .chart-pie {
            position: relative;
            height: 300px;
        }
    </style>
}

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
    <script src="https://cdn.datatables.net/1.10.20/js/jquery.dataTables.min.js"></script>
    <script src="https://cdn.datatables.net/1.10.20/js/dataTables.bootstrap4.min.js"></script>
    <script>
        // Inicialização da tabela DataTable
        $(document).ready(function() {
            $('#dataTable').DataTable({
                language: {
                    url: '//cdn.datatables.net/plug-ins/1.10.20/i18n/Portuguese-Brasil.json'
                },
                order: [[2, 'desc']]
            });
        });

        // Gráfico de Pizza - Status das Locações
        var pieCtx = document.getElementById("statusLocacoesChart");
        var pieChart = new Chart(pieCtx, {
            type: 'doughnut',
            data: {
                labels: @Json.Serialize(Model.StatusLocacoes.Select(x => x.Status)),
                datasets: [{
                    data: @Json.Serialize(Model.StatusLocacoes.Select(x => x.Quantidade)),
                    backgroundColor: @Json.Serialize(Model.StatusLocacoes.Select(x => x.Cor)),
                    hoverBackgroundColor: @Json.Serialize(Model.StatusLocacoes.Select(x => x.Cor)),
                    hoverBorderColor: "rgba(234, 236, 244, 1)",
                    borderWidth: 2
                }],
            },
            options: {
                maintainAspectRatio: false,
                plugins: {
                    tooltip: {
                        backgroundColor: "rgb(255,255,255)",
                        bodyColor: "#858796",
                        borderColor: '#dddfeb',
                        borderWidth: 1,
                        padding: 15,
                        displayColors: false,
                        callbacks: {
                            label: function(context) {
                                var label = context.label || '';
                                var value = context.raw || 0;
                                var total = context.dataset.data.reduce((a, b) => a + b, 0);
                                var percentage = Math.round((value / total) * 100);
                                return `${label}: ${value} (${percentage}%)`;
                            }
                        }
                    },
                    legend: {
                        display: false
                    }
                },
                cutout: '70%',
                animation: {
                    animateScale: true,
                    animateRotate: true
                }
            }
        });

        // Gráfico de Linhas - Locações por Mês
        var lineCtx = document.getElementById("locacoesPorMesChart");
        var lineChart = new Chart(lineCtx, {
            type: 'line',
            data: {
                labels: @Json.Serialize(Model.LocacoesPorMes.Select(x => x.MesAno)),
                datasets: [{
                    label: "Locações",
                    tension: 0.3,
                    fill: true,
                    backgroundColor: "rgba(78, 115, 223, 0.05)",
                    borderColor: "rgba(78, 115, 223, 1)",
                    pointRadius: 4,
                    pointBackgroundColor: "rgba(78, 115, 223, 1)",
                    pointBorderColor: "rgba(78, 115, 223, 1)",
                    pointHoverRadius: 5,
                    pointHoverBackgroundColor: "rgba(78, 115, 223, 1)",
                    pointHoverBorderColor: "rgba(78, 115, 223, 1)",
                    pointHitRadius: 10,
                    pointBorderWidth: 2,
                    data: @Json.Serialize(Model.LocacoesPorMes.Select(x => x.Quantidade)),
                }],
            },
            options: {
                maintainAspectRatio: false,
                plugins: {
                    legend: {
                        display: false
                    },
                    tooltip: {
                        backgroundColor: "rgb(255,255,255)",
                        bodyColor: "#858796",
                        titleColor: '#6e707e',
                        titleMarginBottom: 10,
                        borderColor: '#dddfeb',
                        borderWidth: 1,
                        padding: 15,
                        displayColors: false,
                        intersect: false,
                        mode: 'index',
                        callbacks: {
                            label: function(context) {
                                return `Locações: ${context.raw}`;
                            }
                        }
                    }
                },
                scales: {
                    x: {
                        grid: {
                            display: false,
                            drawBorder: false
                        },
                        ticks: {
                            maxTicksLimit: 7
                        }
                    },
                    y: {
                        grid: {
                            color: "rgb(234, 236, 244)",
                            drawBorder: false,
                            borderDash: [2],
                            zeroLineBorderDash: [2]
                        },
                        ticks: {
                            maxTicksLimit: 5,
                            padding: 10
                        }
                    }
                }
            }
        });

        // Funções para os botões de exportação
        document.getElementById('exportPieChart').addEventListener('click', function() {
            var url = pieChart.toBase64Image();
            var link = document.createElement('a');
            link.href = url;
            link.download = 'status-locacoes.png';
            link.click();
        });

        document.getElementById('exportLineChart').addEventListener('click', function() {
            var url = lineChart.toBase64Image();
            var link = document.createElement('a');
            link.href = url;
            link.download = 'locacoes-por-mes.png';
            link.click();
        });

        // Atualizar gráficos
        document.getElementById('refreshPieChart').addEventListener('click', function() {
            // Simulação de atualização - em produção seria uma chamada AJAX
            pieChart.update();
            toastr.success('Gráfico de status atualizado!');
        });

        document.getElementById('refreshLineChart').addEventListener('click', function() {
            // Simulação de atualização - em produção seria uma chamada AJAX
            lineChart.update();
            toastr.success('Gráfico mensal atualizado!');
        });
    </script>
}